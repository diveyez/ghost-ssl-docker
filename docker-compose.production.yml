version: "3"

services:
  nginx-proxy:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_conf:/etc/nginx/conf.d
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - nginx_certs:/etc/nginx/certs:ro
      - nginx_htpasswd:/etc/nginx/htpasswd:ro

  docker-gen:
    build: ./docker-gen
    container_name: docker-gen
    restart: always
    volumes:
      - nginx_conf:/etc/nginx/conf.d
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - nginx_certs:/etc/nginx/certs:ro
      - nginx_htpasswd:/etc/nginx/htpasswd:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro,z
    command: >
      -notify-sighup nginx-proxy -watch
      /etc/docker-gen/templates/nginx.tmpl
      /etc/nginx/conf.d/default.conf

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    restart: always
    volumes:
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - nginx_certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      NGINX_DOCKER_GEN_CONTAINER: docker-gen

  ghost:
    restart: always
    environment:
      VIRTUAL_HOST: ${DOMAIN_NAME}
      LETSENCRYPT_HOST: ${DOMAIN_NAME}
      LETSENCRYPT_EMAIL: ${ADMIN_EMAIL}
      NODE_ENV: production
      url: https://${DOMAIN_NAME}

  cron:
    build: ./cron
    restart: always
    depends_on:
      - ghost
    volumes:
      - data:${DATA_PATH}/data:ro
      - backup:${DATA_PATH}/backup
    environment:
      DATA_PATH: ${DATA_PATH}

volumes:
  nginx_conf:
  nginx_vhost:
  nginx_html:
  nginx_certs:
  nginx_htpasswd:
  backup:

